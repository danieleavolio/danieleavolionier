import{s as be,f as d,g as p,h as ze,d as a,j as F,i as r,u as O,N as Te,K as $e,C as we,v as Q,w as pe,a as f,l as Me,B as _,c as v,m as Ce,r as me}from"./scheduler.ef8ee926.js";import{S as xe,i as Le,b as R,d as V,m as J,a as W,t as X,e as Z}from"./index.97c34b88.js";import{g as He,a as fe}from"./spread.8a54911c.js";import{M as ke}from"./mdsvex.87e4c260.js";import{e as _e}from"./each.2df3b80d.js";import{I as Ie}from"./img.20eacb81.js";function ve(c,t,u){const n=c.slice();return n[3]=t[u],n}function ge(c){let t,u,n,l;function s(){return c[2](c[3])}return{c(){t=d("img"),this.h()},l(i){t=p(i,"IMG",{src:!0,alt:!0,class:!0}),this.h()},h(){$e(t.src,u=`https://simpleicons.org/icons/${c[3].icon}.svg`)||F(t,"src",u),F(t,"alt",c[3].name),F(t,"class","icon svelte-m7vcz4")},m(i,m){r(i,t,m),n||(l=we(t,"click",s),n=!0)},p(i,m){c=i},d(i){i&&a(t),n=!1,l()}}}function Pe(c){let t,u=_e(c[0]),n=[];for(let l=0;l<u.length;l+=1)n[l]=ge(ve(c,u,l));return{c(){t=d("div");for(let l=0;l<n.length;l+=1)n[l].c();this.h()},l(l){t=p(l,"DIV",{class:!0});var s=ze(t);for(let i=0;i<n.length;i+=1)n[i].l(s);s.forEach(a),this.h()},h(){F(t,"class","contacts svelte-m7vcz4")},m(l,s){r(l,t,s);for(let i=0;i<n.length;i+=1)n[i]&&n[i].m(t,null)},p(l,[s]){if(s&3){u=_e(l[0]);let i;for(i=0;i<u.length;i+=1){const m=ve(l,u,i);n[i]?n[i].p(m,s):(n[i]=ge(m),n[i].c(),n[i].m(t,null))}for(;i<n.length;i+=1)n[i].d(1);n.length=u.length}},i:O,o:O,d(l){l&&a(t),Te(n,l)}}}function ye(c){let t=[{name:"LinkedIn",url:"https://www.linkedin.com/in/danieleavolio/",icon:"linkedin"},{name:"x",url:"https://twitter.com/avolio_daniele",icon:"x"},{name:"GitHub",url:"https://github.com/danieleavolio",icon:"github"}];const u=l=>{window.open(l,"_blank")};return[t,u,l=>u(l.url)]}class Ue extends xe{constructor(t){super(),Le(this,t,ye,Pe,be,{})}}function Ge(c){let t,u="Questo progetto è progettato per semplificare il download di video da YouTube con un’interfaccia grafica (GUI) facile da usare. Utilizza la libreria <strong>pytube</strong> per identificare e scaricare i video in formato audio o video. Il sistema consente di personalizzare le preferenze di download, rendendolo adatto per vari utilizzi.",n,l,s="<strong>Caratteristiche</strong>",i,m,ee="<li>Download di video da YouTube in tempo reale.</li> <li>Selezione del formato di output (audio o video).</li> <li>Interfaccia grafica (GUI) intuitiva e facile da usare.</li> <li>Leggero ed efficiente, adatto per essere eseguito su varie piattaforme hardware.</li>",P,g,I,te="Esempio",K,h,y,b,ie=`<strong>Installazione</strong>
Controllare la repository github per clonare il progetto e installare le dipendenze necessarie. Tutte le informazioni sono disponibili nel file <code>requirements.txt</code>.`,U,z,le=`<strong>Utilizzo</strong>
Per avviare il sistema di download, esegui lo script principale <code>app.bat</code> dal terminale.`,G,x,ne="<strong>Parametri</strong>",Y,L,oe="<li>Nessun parametro richiesto per l’avvio, ma potrai selezionare le opzioni di download all’interno della GUI.</li>",q,T,ae=`<strong>Complicazioni e Limitazioni</strong>
Attualmente il progetto non supporta il download di playlist o canali interi. Inoltre, la velocità di download può variare in base alla connessione internet e alle politiche di YouTube. Il progetto è stato ottimizzato per la maggior parte dei casi d’uso, ma potrebbero sorgere limitazioni con video a risoluzione molto alta o con restrizioni di accesso.`,D,$,re="<strong>Future Implementazioni</strong>",E,w,se="<li>Supporto per il download di playlist e canali.</li> <li>Miglioramento della gestione delle eccezioni e degli errori di rete.</li> <li>Possibilità di personalizzare ulteriormente le opzioni di download.</li>",S,M,ue=`<strong>Conclusione</strong>
Puoi trovare il progetto sulla pagina github qui <a href="https://github.com/danieleavolio/YoutubeDownloaderGUI" rel="nofollow">Link</a>!`,j,C,ce="Per qualsiasi domanda o suggerimento, non esitare a contattarmi!",N,H,de="<strong>Daniele Avolio</strong> <strong>YoutubeDownloaderGUI</strong>",A,k,B;return h=new Ie({props:{src:"https://camo.githubusercontent.com/f83cc09a36be36a8b8c0fcc5585c2a8a156c2d2437e018715135c78952260854/68747470733a2f2f692e696d6775722e636f6d2f37674c6f5065312e706e67",alt:"Esempio"}}),k=new Ue({}),{c(){t=d("p"),t.innerHTML=u,n=f(),l=d("p"),l.innerHTML=s,i=f(),m=d("ul"),m.innerHTML=ee,P=f(),g=d("p"),I=d("strong"),I.textContent=te,K=Me(`
Esempio di Utilizzo di YoutubeDownloaderGUI
`),R(h.$$.fragment),y=f(),b=d("p"),b.innerHTML=ie,U=f(),z=d("p"),z.innerHTML=le,G=f(),x=d("p"),x.innerHTML=ne,Y=f(),L=d("ul"),L.innerHTML=oe,q=f(),T=d("p"),T.innerHTML=ae,D=f(),$=d("p"),$.innerHTML=re,E=f(),w=d("ul"),w.innerHTML=se,S=f(),M=d("p"),M.innerHTML=ue,j=f(),C=d("p"),C.textContent=ce,N=f(),H=d("p"),H.innerHTML=de,A=f(),R(k.$$.fragment)},l(e){t=p(e,"P",{"data-svelte-h":!0}),_(t)!=="svelte-o67l7d"&&(t.innerHTML=u),n=v(e),l=p(e,"P",{"data-svelte-h":!0}),_(l)!=="svelte-x08ac4"&&(l.innerHTML=s),i=v(e),m=p(e,"UL",{"data-svelte-h":!0}),_(m)!=="svelte-15hvlr"&&(m.innerHTML=ee),P=v(e),g=p(e,"P",{});var o=ze(g);I=p(o,"STRONG",{"data-svelte-h":!0}),_(I)!=="svelte-130zd6k"&&(I.textContent=te),K=Ce(o,`
Esempio di Utilizzo di YoutubeDownloaderGUI
`),V(h.$$.fragment,o),o.forEach(a),y=v(e),b=p(e,"P",{"data-svelte-h":!0}),_(b)!=="svelte-7fakqn"&&(b.innerHTML=ie),U=v(e),z=p(e,"P",{"data-svelte-h":!0}),_(z)!=="svelte-1c4x1r4"&&(z.innerHTML=le),G=v(e),x=p(e,"P",{"data-svelte-h":!0}),_(x)!=="svelte-16pjl4o"&&(x.innerHTML=ne),Y=v(e),L=p(e,"UL",{"data-svelte-h":!0}),_(L)!=="svelte-1qacmpv"&&(L.innerHTML=oe),q=v(e),T=p(e,"P",{"data-svelte-h":!0}),_(T)!=="svelte-1vkjjue"&&(T.innerHTML=ae),D=v(e),$=p(e,"P",{"data-svelte-h":!0}),_($)!=="svelte-k1xddt"&&($.innerHTML=re),E=v(e),w=p(e,"UL",{"data-svelte-h":!0}),_(w)!=="svelte-3t04ve"&&(w.innerHTML=se),S=v(e),M=p(e,"P",{"data-svelte-h":!0}),_(M)!=="svelte-zuho7f"&&(M.innerHTML=ue),j=v(e),C=p(e,"P",{"data-svelte-h":!0}),_(C)!=="svelte-19fwvc1"&&(C.textContent=ce),N=v(e),H=p(e,"P",{"data-svelte-h":!0}),_(H)!=="svelte-19pbmen"&&(H.innerHTML=de),A=v(e),V(k.$$.fragment,e)},m(e,o){r(e,t,o),r(e,n,o),r(e,l,o),r(e,i,o),r(e,m,o),r(e,P,o),r(e,g,o),me(g,I),me(g,K),J(h,g,null),r(e,y,o),r(e,b,o),r(e,U,o),r(e,z,o),r(e,G,o),r(e,x,o),r(e,Y,o),r(e,L,o),r(e,q,o),r(e,T,o),r(e,D,o),r(e,$,o),r(e,E,o),r(e,w,o),r(e,S,o),r(e,M,o),r(e,j,o),r(e,C,o),r(e,N,o),r(e,H,o),r(e,A,o),J(k,e,o),B=!0},p:O,i(e){B||(W(h.$$.fragment,e),W(k.$$.fragment,e),B=!0)},o(e){X(h.$$.fragment,e),X(k.$$.fragment,e),B=!1},d(e){e&&(a(t),a(n),a(l),a(i),a(m),a(P),a(g),a(y),a(b),a(U),a(z),a(G),a(x),a(Y),a(L),a(q),a(T),a(D),a($),a(E),a(w),a(S),a(M),a(j),a(C),a(N),a(H),a(A)),Z(h),Z(k,e)}}}function Ye(c){let t,u;const n=[c[0],he];let l={$$slots:{default:[Ge]},$$scope:{ctx:c}};for(let s=0;s<n.length;s+=1)l=Q(l,n[s]);return t=new ke({props:l}),{c(){R(t.$$.fragment)},l(s){V(t.$$.fragment,s)},m(s,i){J(t,s,i),u=!0},p(s,[i]){const m=i&1?He(n,[i&1&&fe(s[0]),i&0&&fe(he)]):{};i&2&&(m.$$scope={dirty:i,ctx:s}),t.$set(m)},i(s){u||(W(t.$$.fragment,s),u=!0)},o(s){X(t.$$.fragment,s),u=!1},d(s){Z(t,s)}}}const he={title:"Youtube downloader",description:"Semplice client di download per video di Youtube in Python con interfaccia grafica",date:"10-17-2024",categories:["Python","Tkinter","pytube"],published:!0};function qe(c,t,u){return c.$$set=n=>{u(0,t=Q(Q({},t),pe(n)))},t=pe(t),[t]}class Be extends xe{constructor(t){super(),Le(this,t,qe,Ye,be,{})}}export{Be as default,he as metadata};
